//! > Test fib raw executable.

//! > test_runner_name
CompileExecutableTestRunner(expect_diagnostics: false)

//! > cairo_code
#[executable_raw]
fn main(mut _input: Span<felt252>, ref output: Array<felt252>) {
    output.append(fib(1, 1, 10));
}

fn fib(a: felt252, b: felt252, n: felt252) -> felt252 {
    if n == 0 {
        a
    } else {
        fib(b, a + b, n - 1)
    }
}

//! > expected_diagnostics

//! > result
["0x20", "0x2", "0x7ffffffc", "0x0"],
["0x20", "0x2", "0x7ffffffc", "0x0"],
["0xa", "0x2", "0x0", "0x0"],
["0x5a", "0x3", "0x0", "0x0"],
["0x1e", "0x0", "0x7ffffffe", "0x0"],
["0xab", "0x0", "0x0", "0x0"],
["0x26", "0x0", "0x1", "0x0"],
["0x26", "0x0", "0x1", "0x0"],
["0x26", "0x0", "0xa", "0x0"],
["0x5a", "0x5", "0x0", "0x0"],
["0x23", "0x7ffffffe", "0x7ffffffc", "0x0"],
["0x20", "0x0", "0x7ffffffb", "0x0"],
["0x1c", "0x0", "0x1", "0x7ffffffc"],
["0xab", "0x0", "0x0", "0x0"],
["0xa9", "0x3", "0x7ffffffc", "0x0"],
["0x20", "0x0", "0x7ffffffa", "0x0"],
["0xab", "0x0", "0x0", "0x0"],
["0x20", "0x0", "0x7ffffffb", "0x0"],
["0x18", "0x0", "0x7ffffffb", "0x7ffffffa"],
["0x3c", "0x7ffffffc", "0x1", "0x0"],
["0x5a", "0x7ffffff9", "0x0", "0x0"],
["0xab", "0x0", "0x0", "0x0"],
["0xab", "0x0", "0x0", "0x0"],
